---
title: "Untitled"
format: html
---

```{r}

# Load necessary libraries and read in the data
library(readr)
df <- read_csv("Data/ByState.csv")

# Display the first few rows to inspect the data
head(df)

```

```{r}

# Ensure that dplyr package is installed and loaded
options(repos = c(CRAN = "https://cran.r-project.org"))
install.packages("dplyr")
library(dplyr)

```

```{r}

# Rename columns for maternal mortality rates
df <- df %>%
  rename(
    Black = `Maternal Mortality - Mother's Race is Black (2017-2022)`,
    White = `Maternal Mortality - Mother's Race is White (2017-2022)`
  )

# Display the first few rows to confirm changes
head(df)

```

```{r}

library(ggplot2)

# Create a bar plot comparing maternal mortality rates by state for Black and White mothers
ggplot() +
  geom_bar(data = df, aes(x = State, y = Black, fill = "Black"), 
           stat = "identity", position = "dodge") +
  geom_bar(data = df, aes(x = State, y = White, fill = "White"), 
           stat = "identity", position = "dodge") +
  labs(
    title = "Maternal Mortality Rates by Race and State",
    x = "State",
    y = "Maternal Mortality Rate",
    fill = "Race"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    plot.title = element_text(size = 18, face = "bold"),
    legend.position = "top"
  ) +
  scale_fill_manual(values = c("Black" = "#1f77b4", "White" = "#ff7f0e"))

```

```{r}

library(tidyr)

# Convert data to long format for easier plotting
df_long <- df %>%
  pivot_longer(cols = c(Black, White), names_to = "Race", values_to = "MortalityRate")

# Create a boxplot for the distribution of maternal mortality rates
ggplot(df_long, aes(x = Race, y = MortalityRate, fill = Race)) +
  geom_boxplot() +
  labs(
    title = "Distribution of Maternal Mortality Rates by Race",
    x = "Race",
    y = "Maternal Mortality Rate"
  ) +
  scale_fill_manual(values = c("Black" = "#1f77b4", "White" = "#ff7f0e")) +
  theme_minimal()

```

```{r}

# Perform a t-test to compare maternal mortality rates between Black and White mothers
black_rates <- na.omit(df$Black)
white_rates <- na.omit(df$White)

t_test_result <- t.test(black_rates, white_rates, alternative = "greater")

# Print the t-test results
print(t_test_result)

```

> The p-value is extremely small, much less
than the typical significance level of 0.05.
This means that we can reject the null hypothesis
that the maternal mortality rates for Black and 
White mothers are the same.


```{r}

# Rename columns for infant mortality rates
df <- df %>%
  rename(
    Black_Infant = `Total Infant Mortality black`,
    White_Infant = `Total Infant Mortality white`
  )

# Display the first few rows to confirm changes
head(df)

```

```{r}

# Convert data to long format for easier plotting
df_long <- df %>%
  pivot_longer(cols = c(Black_Infant, White_Infant), names_to = "Race", values_to = "InfantMortalityRate")

# Create a boxplot for the distribution of infant mortality rates
ggplot(df_long, aes(x = Race, y = InfantMortalityRate, fill = Race)) +
  geom_boxplot() +
  labs(
    title = "Distribution of Infant Mortality Rates by Race",
    x = "Race",
    y = "Infant Mortality Rate"
  ) +
  scale_fill_manual(values = c("Black" = "#1f77b4", "White" = "#ff7f0e")) +
  theme_minimal()

```

```{r}

# Perform a t-test to compare infant mortality rates between Black and White infants
black_infant_rates <- na.omit(df$Black_Infant)
white_infant_rates <- na.omit(df$White_Infant)

t_test_result_infant <- t.test(black_infant_rates, white_infant_rates, alternative = "greater")

# Print the t-test results
print(t_test_result_infant)

```

> The p-value is extremely small,
much smaller than the typical significance
level of 0.05. This means that we can reject
the null hypothesis that the infant mortality
rates for Black and White infants are the same.